package com.yuanjing.jintianchishenme.ui

import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.unit.dp

/**
 * ‰ªäÂ§©ÂêÉ‰ªÄ‰πàÂäüËÉΩÂ±èÂπï
 *
 * ËøôÊòØ‰∏Ä‰∏™‰∏ìÈó®ÁöÑÈ§êÈ£üÊé®ËçêÂ±èÂπïÔºå‰Ωú‰∏∫Áã¨Á´ãÂäüËÉΩÊ®°ÂùóÊèê‰æõ„ÄÇ
 * ÂèØ‰ª•‰Ωú‰∏∫Êèí‰ª∂Âä®ÊÄÅÂä†ËΩΩÂà∞‰∏ªÂ∫îÁî®‰∏≠„ÄÇ
 */
@Composable
fun JintianchishenmeScreen(
    modifier: Modifier = Modifier
) {
    Surface(
        modifier = modifier.fillMaxSize(),
        color = MaterialTheme.colorScheme.background
    ) {
        Column(
            modifier = Modifier
                .fillMaxSize()
                .padding(16.dp),
            horizontalAlignment = Alignment.CenterHorizontally,
            verticalArrangement = Arrangement.spacedBy(24.dp)
        ) {
            // Ê†áÈ¢òÂç°Áâá
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = MaterialTheme.colorScheme.primaryContainer
                )
            ) {
                Column(
                    modifier = Modifier.padding(24.dp),
                    horizontalAlignment = Alignment.CenterHorizontally
                ) {
                    Text(
                        text = "üçú ‰ªäÂ§©ÂêÉ‰ªÄ‰πà",
                        style = MaterialTheme.typography.headlineMedium,
                        fontWeight = FontWeight.Bold,
                        color = MaterialTheme.colorScheme.onPrimaryContainer
                    )
                    Spacer(modifier = Modifier.height(8.dp))
                    Text(
                        text = "‰∏ì‰∏öÁöÑÈ§êÈ£üÊé®ËçêÂäüËÉΩÊ®°Âùó",
                        style = MaterialTheme.typography.bodyLarge,
                        color = MaterialTheme.colorScheme.onPrimaryContainer.copy(alpha = 0.8f)
                    )
                }
            }

            // ÂäüËÉΩ‰ªãÁªçÂç°Áâá
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = MaterialTheme.colorScheme.secondaryContainer
                )
            ) {
                Column(
                    modifier = Modifier.padding(20.dp)
                ) {
                    Text(
                        text = "ÂäüËÉΩÁâπËâ≤",
                        style = MaterialTheme.typography.titleLarge,
                        fontWeight = FontWeight.SemiBold,
                        color = MaterialTheme.colorScheme.onSecondaryContainer,
                        modifier = Modifier.padding(bottom = 12.dp)
                    )

                    val features = listOf(
                        "üéØ Êô∫ËÉΩÊé®ËçêÁÆóÊ≥ï",
                        "üè∑Ô∏è Â§öÊ†∑ÂåñÂàÜÁ±ªÊ†áÁ≠æ",
                        "üìä Êé®ËçêÂéÜÂè≤ËÆ∞ÂΩï",
                        "‚öôÔ∏è ‰∏™ÊÄßÂåñËÆæÁΩÆ",
                        "üîå Êèí‰ª∂ÂåñÊû∂ÊûÑ"
                    )

                    features.forEach { feature ->
                        Text(
                            text = feature,
                            style = MaterialTheme.typography.bodyLarge,
                            color = MaterialTheme.colorScheme.onSecondaryContainer,
                            modifier = Modifier.padding(vertical = 4.dp)
                        )
                    }
                }
            }

            // ÁâàÊú¨‰ø°ÊÅØÂç°Áâá
            Card(
                modifier = Modifier.fillMaxWidth(),
                colors = CardDefaults.cardColors(
                    containerColor = MaterialTheme.colorScheme.tertiaryContainer
                )
            ) {
                Column(
                    modifier = Modifier.padding(16.dp)
                ) {
                    Text(
                        text = "Ê®°Âùó‰ø°ÊÅØ",
                        style = MaterialTheme.typography.titleMedium,
                        color = MaterialTheme.colorScheme.onTertiaryContainer,
                        modifier = Modifier.padding(bottom = 8.dp)
                    )

                    Row(
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.SpaceBetween
                    ) {
                        Text(
                            text = "ÁâàÊú¨:",
                            style = MaterialTheme.typography.bodyMedium
                        )
                        Text(
                            text = "v2.0.0",
                            style = MaterialTheme.typography.bodyMedium,
                            fontWeight = FontWeight.Medium
                        )
                    }

                    Row(
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.SpaceBetween
                    ) {
                        Text(
                            text = "Êû∂ÊûÑ:",
                            style = MaterialTheme.typography.bodyMedium
                        )
                        Text(
                            text = "Êèí‰ª∂ÂåñÊ®°Âùó",
                            style = MaterialTheme.typography.bodyMedium,
                            fontWeight = FontWeight.Medium
                        )
                    }

                    Row(
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.SpaceBetween
                    ) {
                        Text(
                            text = "Áä∂ÊÄÅ:",
                            style = MaterialTheme.typography.bodyMedium
                        )
                        Text(
                            text = "‚úÖ Â∑≤ÊøÄÊ¥ª",
                            style = MaterialTheme.typography.bodyMedium,
                            color = MaterialTheme.colorScheme.primary,
                            fontWeight = FontWeight.Medium
                        )
                    }
                }
            }

            // Êìç‰ΩúÊåâÈíÆ
            Button(
                onClick = {
                    println("‰ªäÂ§©ÂêÉ‰ªÄ‰πàÂäüËÉΩË¢´ÁÇπÂáª")
                },
                modifier = Modifier.fillMaxWidth()
            ) {
                Text(
                    text = "ÂºÄÂßã‰ΩøÁî®È§êÈ£üÊé®Ëçê",
                    style = MaterialTheme.typography.labelLarge
                )
            }
        }
    }
}
